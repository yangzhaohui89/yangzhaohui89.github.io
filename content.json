{"meta":{"title":"落泥","subtitle":"落红不是无情物，化作春泥更护花","description":"合抱之木始于毫末","author":"Yanzh","url":"http://yangzhaohui89.github.io"},"pages":[{"title":"分类","date":"2017-11-16T15:03:31.000Z","updated":"2018-02-01T09:08:09.721Z","comments":true,"path":"categories/index.html","permalink":"http://yangzhaohui89.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2017-11-16T15:03:05.000Z","updated":"2018-02-09T09:06:14.308Z","comments":true,"path":"about/index.html","permalink":"http://yangzhaohui89.github.io/about/index.html","excerpt":"","text":"test！"},{"title":"标签","date":"2017-11-16T15:01:29.000Z","updated":"2018-02-01T09:07:46.325Z","comments":true,"path":"tags/index.html","permalink":"http://yangzhaohui89.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"基金从业资格考试","slug":"笔记.2","date":"2018-02-22T03:45:25.000Z","updated":"2018-02-22T07:28:45.200Z","comments":true,"path":"2018/02/22/笔记.2/","link":"","permalink":"http://yangzhaohui89.github.io/2018/02/22/笔记.2/","excerpt":"","text":"考试大纲1.投资管理基础2.权益投资3.固定收益投资4.衍生品工作5.另类投资6.投资者需求与资产配置7.投资组合管理8.投资交易管理9.投资风险的管理与控制10.基金业绩评价11.基金的投资交易与结算12.基金估值、费用与会计核算13.基金的利润分配与税收14.基金国际化的发展概况 人生总有起起伏伏，总结、总结、总结。 我说","categories":[{"name":"金融","slug":"金融","permalink":"http://yangzhaohui89.github.io/categories/金融/"}],"tags":[{"name":"基金","slug":"基金","permalink":"http://yangzhaohui89.github.io/tags/基金/"}]},{"title":"shell使用笔记","slug":"笔记.1","date":"2018-02-09T08:51:38.691Z","updated":"2018-02-22T03:13:12.555Z","comments":true,"path":"2018/02/09/笔记.1/","link":"","permalink":"http://yangzhaohui89.github.io/2018/02/09/笔记.1/","excerpt":"","text":"常用命令总结ps使用说明ps命令是process status的缩写，列出系统中当前正在运行的进程。123$ ps -ef$ ps -aux #列出目前所有正在内存中的程序$ ps -au #显示较详细的咨询 UID 用户id(User ID)PID 进程id(Process ID)PPID 父进程id(Parent Process id)SID 会话id(Session ID)%CPU 进程cpu占用率%MEM 进程的内存占用率CSTIME 起始时间TTY 与进程关联的终端TIME 运行时间CMD 该进行运行的命令STAT 进程的运行状态，R运行Runnable(on run queue)正在运行或在运行队列中等待；S 休眠中阻塞；I 空闲 Idle；Z 僵死Zombie；。。。 参考资料1.参考博客地址 人生总有起起伏伏，总结、总结、总结。 我说","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yangzhaohui89.github.io/categories/笔记/"}],"tags":[{"name":"shell","slug":"shell","permalink":"http://yangzhaohui89.github.io/tags/shell/"}]},{"title":"友盟使用指南","slug":"second","date":"2018-02-05T09:25:05.000Z","updated":"2018-02-09T08:49:53.524Z","comments":true,"path":"2018/02/05/second/","link":"","permalink":"http://yangzhaohui89.github.io/2018/02/05/second/","excerpt":"","text":"概念说明AppKey, Umeng Message Secret , App Master Secret注册友盟账号，系统会自动生成AppKey, Umeng Message Secret , App Master Secret。 AppKey是友盟对应用的唯一标志，在友盟后台创建应用后，系统会自动为每个应用生成一个AppKey，在集成SDK的时候，需要填写这个AppKey以便友盟推送能够识别当前用户属于某一应用。友盟推送同一应用的不同平台使用不同的AppKey Umeng Message Secret是和AppKey相对应的，用来关联唯一的应用，如果把AppKey理解为应用在友盟的ID，那么Umeng Message Secret则可以理解为这个ID的密钥。需要注意的是，开发者在集成友盟推送SDK的时候，需要将两个参数替换，以便友盟服务器识别你的应用。 App Master Secret称为服务器密钥，是用于服务器端调用API请求是对发送内容做签名验证。如果开发者调用API接口进行推送，需要将AppKey和App Master Secret这两个参数放入服务器端接口实现推送。 具体使用方法可以参考：http://dev.umeng.com/push/android/api-doc#4_10 三种推送方式立即推送就是消息提交后，立即进行发送。例如：某咨询类App在遇到一些突发新闻或者时效性较强的新闻时，一般会选择立即推送这种方式，推送后台会显示该消息从现在起过期的时间，默认72小时，设备在线的用户均可接收到该条消息。 定时推送友盟支持定时推送，定时推送首先为运营人员提供了极大的方便,可以设置推送的时间段，定时推送；支持通过调用API来进行定时推送12345678910111213141516\"policy\": // 可选 发送策略 &#123; \"start_time\":\"xx\", // 可选 定时发送时间，若不填写表示立即发送。 定时发送时间不能小于当前时间 格式: \"yyyy-MM-dd HH:mm:ss\"。 注意, start_time只对任务生效。 \"expire_time\":\"xx\", // 可选 消息过期时间,其值不可小于发送时间或者 start_time(如果填写了的话), 如果不填写此参数，默认为3天后过期。格式同start_time \"max_send_num\": xx, // 可选 发送限速，每秒发送的最大条数。 开发者发送的消息如果有请求自己服务器的资源，可以考虑此参数。 \"out_biz_no\": \"xx\" // 可选 开发者对消息的唯一标识，服务器会根据这个标识避免重复发送。 有些情况下（例如网络异常）开发者可能会重复调用API导致 消息多次下发到客户端。如果需要处理这种情况，可以考虑此参数。 注意, out_biz_no只对任务生效。 &#125; 重复推送以固定的频率和周期进行推送。（目前不支持api接口调用） 参考资料友盟论坛后台开发API文档1后台开发API文档2友盟返回错误代码说明人生总有起起伏伏，总结、总结、总结。 我说","categories":[],"tags":[{"name":"指南","slug":"指南","permalink":"http://yangzhaohui89.github.io/tags/指南/"}]},{"title":"Hexo使用指南","slug":"first","date":"2017-11-15T12:12:07.726Z","updated":"2018-02-22T03:47:28.054Z","comments":true,"path":"2017/11/15/first/","link":"","permalink":"http://yangzhaohui89.github.io/2017/11/15/first/","excerpt":"","text":"快速开始创建第一篇博客1$ hexo new \"第一篇博客\" 更多信息: 写文章相关 允许本地服务器12$ hexo server #启动服务器$ hexo server --port 4444 #指定具体端口 更多信息: 服务器相关 生成静态文件1$ hexo generate 更多信息: 生成HTML 部署到远程站点1$ hexo deploy 更多信息: 部署 部署Git安装hexo-deployer-git1$ npm install hexo-deployer-git --save 修改配置12345deploy: type: git repo: &lt;repository url&gt; branch: [branch] message: [message] 参考资料1.Hexo官网2.http://dkylin.com/archives/2016/build-personal-blog-by-hexo.html 人生总有起起伏伏，总结、总结、总结。 我说","categories":[],"tags":[{"name":"测试","slug":"测试","permalink":"http://yangzhaohui89.github.io/tags/测试/"}]}]}